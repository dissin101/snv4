{"ast":null,"code":"import { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setLoading(true);\n\n    if (body) {\n      body = JSON.stringify(body);\n      headers[\"Content-Type\"] = \"application/json\";\n    }\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        message\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.log(response);\n        throw new Error(\"Что-то пошло не так\");\n      }\n\n      setLoading(false);\n      return data;\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n      throw error;\n    }\n  });\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["/Users/kirill/Desktop/my-apps/my-work/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","message","data","json","ok","console","log","Error","clearError"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,OAAO,GAAGN,WAAW,CACzB,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACxDP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAIM,IAAJ,EAAU;AACRA,MAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,MAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACD;;AACD,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAChCC,QAAAA,MADgC;AAEhCC,QAAAA,IAFgC;AAGhCC,QAAAA,OAHgC;AAIhCK,QAAAA;AAJgC,OAAN,CAA5B;AAMA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;;AAEA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,cAAM,IAAIQ,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAEDlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOa,IAAP;AACD,KAjBD,CAiBE,OAAOZ,KAAP,EAAc;AACdD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR;AACA,YAAMX,KAAN;AACD;AACF,GA7BwB,CAA3B;;AAgCA,QAAMkB,UAAU,GAAG,MAAMjB,QAAQ,CAAC,IAAD,CAAjC;;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2BkB,IAAAA;AAA3B,GAAP;AACD,CAtCM","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setLoading(true);\n      if (body) {\n        body = JSON.stringify(body);\n        headers[\"Content-Type\"] = \"application/json\";\n      }\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          message\n        });\n        const data = await response.json();\n\n        if (!response.ok) {\n          console.log(response)\n          throw new Error(\"Что-то пошло не так\");\n        }\n\n        setLoading(false);\n\n        return data;\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n        throw error;\n      }\n    }\n  );\n\n  const clearError = () => setError(null);\n\n  return { loading, request, error, clearError };\n};\n"]},"metadata":{},"sourceType":"module"}